
adcTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  00000b42  00000bd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b42  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800136  00800136  00000c0c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c0c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000044e  00000000  00000000  00000cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000230  00000000  00000000  0000111e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000217  00000000  00000000  0000134e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000178  00000000  00000000  00001568  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000211  00000000  00000000  000016e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000037c  00000000  00000000  000018f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00001c6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 80 00 	jmp	0x100	; 0x100 <__vector_1>
   8:	0c 94 aa 00 	jmp	0x154	; 0x154 <__vector_2>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 e4       	ldi	r30, 0x42	; 66
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 33       	cpi	r26, 0x36	; 54
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e3       	ldi	r26, 0x36	; 54
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a1 34       	cpi	r26, 0x41	; 65
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 0f 01 	call	0x21e	; 0x21e <main>
  a6:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
  ae:	5f 9b       	sbis	0x0b, 7	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
  b2:	8c b1       	in	r24, 0x0c	; 12
}
  b4:	08 95       	ret

000000b6 <USART_Transmit>:

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<< UDRE0)) )
  b6:	5d 9b       	sbis	0x0b, 5	; 11
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
  ba:	8c b9       	out	0x0c, r24	; 12
  bc:	08 95       	ret

000000be <USART_Init>:


void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
  be:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
  c0:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  c2:	88 e1       	ldi	r24, 0x18	; 24
  c4:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
  c6:	8e e8       	ldi	r24, 0x8E	; 142
  c8:	80 bd       	out	0x20, r24	; 32
  ca:	08 95       	ret

000000cc <ExernalMemoryInit>:
}


void ExernalMemoryInit( void )
{
	MCUCR |= (1<<SRE); // Enable External memory
  cc:	85 b7       	in	r24, 0x35	; 53
  ce:	80 68       	ori	r24, 0x80	; 128
  d0:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2); // mask PORTC 4 - 7 JTAG
  d2:	80 b7       	in	r24, 0x30	; 48
  d4:	80 62       	ori	r24, 0x20	; 32
  d6:	80 bf       	out	0x30, r24	; 48
  d8:	08 95       	ret

000000da <adcInit>:

void adcInit( void )
{
	
	// PortE pin0 as input
	DDRE &= ~(1 << PE0);
  da:	30 98       	cbi	0x06, 0	; 6
	
	// PortD pin 2 and 3 as input
	DDRD |= (1 << PD2);
  dc:	8a 9a       	sbi	0x11, 2	; 17
	DDRD |= (1 << PD3);
  de:	8b 9a       	sbi	0x11, 3	; 17
	
	// Set pull-up resistor
	PORTE |= (1 << PE0);
  e0:	38 9a       	sbi	0x07, 0	; 7
	
	//disable global interrupt
	cli();
  e2:	f8 94       	cli
	
	//Interrupt on rising edge
	EMCUCR |= (1 << ISC11);
  e4:	86 b7       	in	r24, 0x36	; 54
  e6:	88 60       	ori	r24, 0x08	; 8
  e8:	86 bf       	out	0x36, r24	; 54
	EMCUCR |= (1 << ISC01);
  ea:	86 b7       	in	r24, 0x36	; 54
  ec:	82 60       	ori	r24, 0x02	; 2
  ee:	86 bf       	out	0x36, r24	; 54
	EMCUCR |= (1 << ISC10);
  f0:	86 b7       	in	r24, 0x36	; 54
  f2:	84 60       	ori	r24, 0x04	; 4
  f4:	86 bf       	out	0x36, r24	; 54
	EMCUCR |= (1 << ISC00);
  f6:	86 b7       	in	r24, 0x36	; 54
  f8:	81 60       	ori	r24, 0x01	; 1
  fa:	86 bf       	out	0x36, r24	; 54
	
	//Enable interrupt on PE0
	//GICR |= (1<<INT0) | (1<<INT1);
	
	//enable global interrupt
	sei();
  fc:	78 94       	sei
  fe:	08 95       	ret

00000100 <__vector_1>:
//{
//	ADCdata = *extADC;
//}

ISR(INT0_vect)
{
 100:	1f 92       	push	r1
 102:	0f 92       	push	r0
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	0f 92       	push	r0
 108:	11 24       	eor	r1, r1
 10a:	2f 93       	push	r18
 10c:	3f 93       	push	r19
 10e:	4f 93       	push	r20
 110:	5f 93       	push	r21
 112:	6f 93       	push	r22
 114:	7f 93       	push	r23
 116:	8f 93       	push	r24
 118:	9f 93       	push	r25
 11a:	af 93       	push	r26
 11c:	bf 93       	push	r27
 11e:	ef 93       	push	r30
 120:	ff 93       	push	r31
	printf("INT0\n\r");
 122:	88 e0       	ldi	r24, 0x08	; 8
 124:	91 e0       	ldi	r25, 0x01	; 1
 126:	9f 93       	push	r25
 128:	8f 93       	push	r24
 12a:	0e 94 92 01 	call	0x324	; 0x324 <printf>
 12e:	0f 90       	pop	r0
 130:	0f 90       	pop	r0
}
 132:	ff 91       	pop	r31
 134:	ef 91       	pop	r30
 136:	bf 91       	pop	r27
 138:	af 91       	pop	r26
 13a:	9f 91       	pop	r25
 13c:	8f 91       	pop	r24
 13e:	7f 91       	pop	r23
 140:	6f 91       	pop	r22
 142:	5f 91       	pop	r21
 144:	4f 91       	pop	r20
 146:	3f 91       	pop	r19
 148:	2f 91       	pop	r18
 14a:	0f 90       	pop	r0
 14c:	0f be       	out	0x3f, r0	; 63
 14e:	0f 90       	pop	r0
 150:	1f 90       	pop	r1
 152:	18 95       	reti

00000154 <__vector_2>:

ISR(INT1_vect)
{
 154:	1f 92       	push	r1
 156:	0f 92       	push	r0
 158:	0f b6       	in	r0, 0x3f	; 63
 15a:	0f 92       	push	r0
 15c:	11 24       	eor	r1, r1
 15e:	2f 93       	push	r18
 160:	3f 93       	push	r19
 162:	4f 93       	push	r20
 164:	5f 93       	push	r21
 166:	6f 93       	push	r22
 168:	7f 93       	push	r23
 16a:	8f 93       	push	r24
 16c:	9f 93       	push	r25
 16e:	af 93       	push	r26
 170:	bf 93       	push	r27
 172:	ef 93       	push	r30
 174:	ff 93       	push	r31
	printf("INT1\n\r");
 176:	8f e0       	ldi	r24, 0x0F	; 15
 178:	91 e0       	ldi	r25, 0x01	; 1
 17a:	9f 93       	push	r25
 17c:	8f 93       	push	r24
 17e:	0e 94 92 01 	call	0x324	; 0x324 <printf>
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
}
 186:	ff 91       	pop	r31
 188:	ef 91       	pop	r30
 18a:	bf 91       	pop	r27
 18c:	af 91       	pop	r26
 18e:	9f 91       	pop	r25
 190:	8f 91       	pop	r24
 192:	7f 91       	pop	r23
 194:	6f 91       	pop	r22
 196:	5f 91       	pop	r21
 198:	4f 91       	pop	r20
 19a:	3f 91       	pop	r19
 19c:	2f 91       	pop	r18
 19e:	0f 90       	pop	r0
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	0f 90       	pop	r0
 1a4:	1f 90       	pop	r1
 1a6:	18 95       	reti

000001a8 <select_ADC_channel>:

void select_ADC_channel(channel_t channel)
{	
	switch(channel){
 1a8:	81 30       	cpi	r24, 0x01	; 1
 1aa:	69 f0       	breq	.+26     	; 0x1c6 <select_ADC_channel+0x1e>
 1ac:	28 f0       	brcs	.+10     	; 0x1b8 <select_ADC_channel+0x10>
 1ae:	82 30       	cpi	r24, 0x02	; 2
 1b0:	89 f0       	breq	.+34     	; 0x1d4 <select_ADC_channel+0x2c>
 1b2:	83 30       	cpi	r24, 0x03	; 3
 1b4:	b1 f0       	breq	.+44     	; 0x1e2 <select_ADC_channel+0x3a>
 1b6:	1c c0       	rjmp	.+56     	; 0x1f0 <select_ADC_channel+0x48>
		case CHANNEL1:
			*extADC = (uint8_t ) 0x04;
 1b8:	e0 91 06 01 	lds	r30, 0x0106
 1bc:	f0 91 07 01 	lds	r31, 0x0107
 1c0:	84 e0       	ldi	r24, 0x04	; 4
 1c2:	80 83       	st	Z, r24
			break;
 1c4:	08 95       	ret
		case CHANNEL2:
			*extADC = (uint8_t ) 0x05;
 1c6:	e0 91 06 01 	lds	r30, 0x0106
 1ca:	f0 91 07 01 	lds	r31, 0x0107
 1ce:	85 e0       	ldi	r24, 0x05	; 5
 1d0:	80 83       	st	Z, r24
			break;
 1d2:	08 95       	ret
		case CHANNEL3:
			*extADC = (uint8_t ) 0x06;
 1d4:	e0 91 06 01 	lds	r30, 0x0106
 1d8:	f0 91 07 01 	lds	r31, 0x0107
 1dc:	86 e0       	ldi	r24, 0x06	; 6
 1de:	80 83       	st	Z, r24
			break;
 1e0:	08 95       	ret
		case CHANNEL4:
			*extADC = (uint8_t ) 0x07;
 1e2:	e0 91 06 01 	lds	r30, 0x0106
 1e6:	f0 91 07 01 	lds	r31, 0x0107
 1ea:	87 e0       	ldi	r24, 0x07	; 7
 1ec:	80 83       	st	Z, r24
			break;
 1ee:	08 95       	ret
		default:
			printf("Invalid channel");
 1f0:	86 e1       	ldi	r24, 0x16	; 22
 1f2:	91 e0       	ldi	r25, 0x01	; 1
 1f4:	9f 93       	push	r25
 1f6:	8f 93       	push	r24
 1f8:	0e 94 92 01 	call	0x324	; 0x324 <printf>
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	08 95       	ret

00000202 <getADCdata>:
	
}

uint8_t getADCdata(channel_t channel)
{
	select_ADC_channel(channel);
 202:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <select_ADC_channel>
	while (PINE & (1<<PE0)); // Wait for ADC data
 206:	28 99       	sbic	0x05, 0	; 5
 208:	fe cf       	rjmp	.-4      	; 0x206 <getADCdata+0x4>
	ADCdata = *extADC;
 20a:	e0 91 06 01 	lds	r30, 0x0106
 20e:	f0 91 07 01 	lds	r31, 0x0107
 212:	80 81       	ld	r24, Z
 214:	80 93 36 01 	sts	0x0136, r24
	return ADCdata;
 218:	80 91 36 01 	lds	r24, 0x0136
}
 21c:	08 95       	ret

0000021e <main>:

int main(void) 
{
	uint8_t data;
	
		USART_Init ( MYUBRR );
 21e:	8f e1       	ldi	r24, 0x1F	; 31
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Init>
		fdevopen(&USART_Transmit, &USART_Receive);
 226:	67 e5       	ldi	r22, 0x57	; 87
 228:	70 e0       	ldi	r23, 0x00	; 0
 22a:	8b e5       	ldi	r24, 0x5B	; 91
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	0e 94 47 01 	call	0x28e	; 0x28e <fdevopen>
		ExernalMemoryInit();
 232:	0e 94 66 00 	call	0xcc	; 0xcc <ExernalMemoryInit>
		adcInit();
 236:	0e 94 6d 00 	call	0xda	; 0xda <adcInit>
		
		select_ADC_channel(CHANNEL3);
 23a:	82 e0       	ldi	r24, 0x02	; 2
 23c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <select_ADC_channel>
		printf("Start Test");
 240:	86 e2       	ldi	r24, 0x26	; 38
 242:	91 e0       	ldi	r25, 0x01	; 1
 244:	9f 93       	push	r25
 246:	8f 93       	push	r24
 248:	0e 94 92 01 	call	0x324	; 0x324 <printf>
 24c:	0f 90       	pop	r0
 24e:	0f 90       	pop	r0
		//{
		//	printf("Button WORKS!\n\r");
		//}
		data = getADCdata(CHANNEL1);
		_delay_ms(100);
		printf("%d\n\r", data);
 250:	c1 e3       	ldi	r28, 0x31	; 49
 252:	d1 e0       	ldi	r29, 0x01	; 1
    {
		//if(PIND&0x08)
		//{
		//	printf("Button WORKS!\n\r");
		//}
		data = getADCdata(CHANNEL1);
 254:	80 e0       	ldi	r24, 0x00	; 0
 256:	0e 94 01 01 	call	0x202	; 0x202 <getADCdata>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25a:	2f ef       	ldi	r18, 0xFF	; 255
 25c:	3f e7       	ldi	r19, 0x7F	; 127
 25e:	91 e0       	ldi	r25, 0x01	; 1
 260:	21 50       	subi	r18, 0x01	; 1
 262:	30 40       	sbci	r19, 0x00	; 0
 264:	90 40       	sbci	r25, 0x00	; 0
 266:	e1 f7       	brne	.-8      	; 0x260 <main+0x42>
 268:	00 c0       	rjmp	.+0      	; 0x26a <main+0x4c>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <main+0x4e>
		_delay_ms(100);
		printf("%d\n\r", data);
 26c:	1f 92       	push	r1
 26e:	8f 93       	push	r24
 270:	df 93       	push	r29
 272:	cf 93       	push	r28
 274:	0e 94 92 01 	call	0x324	; 0x324 <printf>
 278:	8f ef       	ldi	r24, 0xFF	; 255
 27a:	9f e2       	ldi	r25, 0x2F	; 47
 27c:	01 97       	sbiw	r24, 0x01	; 1
 27e:	f1 f7       	brne	.-4      	; 0x27c <main+0x5e>
 280:	00 c0       	rjmp	.+0      	; 0x282 <main+0x64>
 282:	00 00       	nop
 284:	0f 90       	pop	r0
 286:	0f 90       	pop	r0
 288:	0f 90       	pop	r0
 28a:	0f 90       	pop	r0
 28c:	e3 cf       	rjmp	.-58     	; 0x254 <main+0x36>

0000028e <fdevopen>:
 28e:	0f 93       	push	r16
 290:	1f 93       	push	r17
 292:	cf 93       	push	r28
 294:	df 93       	push	r29
 296:	ec 01       	movw	r28, r24
 298:	8b 01       	movw	r16, r22
 29a:	00 97       	sbiw	r24, 0x00	; 0
 29c:	31 f4       	brne	.+12     	; 0x2aa <fdevopen+0x1c>
 29e:	61 15       	cp	r22, r1
 2a0:	71 05       	cpc	r23, r1
 2a2:	19 f4       	brne	.+6      	; 0x2aa <fdevopen+0x1c>
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	38 c0       	rjmp	.+112    	; 0x31a <fdevopen+0x8c>
 2aa:	6e e0       	ldi	r22, 0x0E	; 14
 2ac:	70 e0       	ldi	r23, 0x00	; 0
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	0e 94 78 03 	call	0x6f0	; 0x6f0 <calloc>
 2b6:	fc 01       	movw	r30, r24
 2b8:	00 97       	sbiw	r24, 0x00	; 0
 2ba:	a1 f3       	breq	.-24     	; 0x2a4 <fdevopen+0x16>
 2bc:	80 e8       	ldi	r24, 0x80	; 128
 2be:	83 83       	std	Z+3, r24	; 0x03
 2c0:	01 15       	cp	r16, r1
 2c2:	11 05       	cpc	r17, r1
 2c4:	71 f0       	breq	.+28     	; 0x2e2 <fdevopen+0x54>
 2c6:	13 87       	std	Z+11, r17	; 0x0b
 2c8:	02 87       	std	Z+10, r16	; 0x0a
 2ca:	81 e8       	ldi	r24, 0x81	; 129
 2cc:	83 83       	std	Z+3, r24	; 0x03
 2ce:	80 91 37 01 	lds	r24, 0x0137
 2d2:	90 91 38 01 	lds	r25, 0x0138
 2d6:	89 2b       	or	r24, r25
 2d8:	21 f4       	brne	.+8      	; 0x2e2 <fdevopen+0x54>
 2da:	f0 93 38 01 	sts	0x0138, r31
 2de:	e0 93 37 01 	sts	0x0137, r30
 2e2:	20 97       	sbiw	r28, 0x00	; 0
 2e4:	c9 f0       	breq	.+50     	; 0x318 <fdevopen+0x8a>
 2e6:	d1 87       	std	Z+9, r29	; 0x09
 2e8:	c0 87       	std	Z+8, r28	; 0x08
 2ea:	83 81       	ldd	r24, Z+3	; 0x03
 2ec:	82 60       	ori	r24, 0x02	; 2
 2ee:	83 83       	std	Z+3, r24	; 0x03
 2f0:	80 91 39 01 	lds	r24, 0x0139
 2f4:	90 91 3a 01 	lds	r25, 0x013A
 2f8:	89 2b       	or	r24, r25
 2fa:	71 f4       	brne	.+28     	; 0x318 <fdevopen+0x8a>
 2fc:	f0 93 3a 01 	sts	0x013A, r31
 300:	e0 93 39 01 	sts	0x0139, r30
 304:	80 91 3b 01 	lds	r24, 0x013B
 308:	90 91 3c 01 	lds	r25, 0x013C
 30c:	89 2b       	or	r24, r25
 30e:	21 f4       	brne	.+8      	; 0x318 <fdevopen+0x8a>
 310:	f0 93 3c 01 	sts	0x013C, r31
 314:	e0 93 3b 01 	sts	0x013B, r30
 318:	cf 01       	movw	r24, r30
 31a:	df 91       	pop	r29
 31c:	cf 91       	pop	r28
 31e:	1f 91       	pop	r17
 320:	0f 91       	pop	r16
 322:	08 95       	ret

00000324 <printf>:
 324:	a0 e0       	ldi	r26, 0x00	; 0
 326:	b0 e0       	ldi	r27, 0x00	; 0
 328:	e8 e9       	ldi	r30, 0x98	; 152
 32a:	f1 e0       	ldi	r31, 0x01	; 1
 32c:	0c 94 78 05 	jmp	0xaf0	; 0xaf0 <__prologue_saves__+0x20>
 330:	fe 01       	movw	r30, r28
 332:	35 96       	adiw	r30, 0x05	; 5
 334:	61 91       	ld	r22, Z+
 336:	71 91       	ld	r23, Z+
 338:	af 01       	movw	r20, r30
 33a:	80 91 39 01 	lds	r24, 0x0139
 33e:	90 91 3a 01 	lds	r25, 0x013A
 342:	0e 94 a6 01 	call	0x34c	; 0x34c <vfprintf>
 346:	e2 e0       	ldi	r30, 0x02	; 2
 348:	0c 94 94 05 	jmp	0xb28	; 0xb28 <__epilogue_restores__+0x20>

0000034c <vfprintf>:
 34c:	ac e0       	ldi	r26, 0x0C	; 12
 34e:	b0 e0       	ldi	r27, 0x00	; 0
 350:	ec ea       	ldi	r30, 0xAC	; 172
 352:	f1 e0       	ldi	r31, 0x01	; 1
 354:	0c 94 68 05 	jmp	0xad0	; 0xad0 <__prologue_saves__>
 358:	7c 01       	movw	r14, r24
 35a:	6b 01       	movw	r12, r22
 35c:	8a 01       	movw	r16, r20
 35e:	fc 01       	movw	r30, r24
 360:	17 82       	std	Z+7, r1	; 0x07
 362:	16 82       	std	Z+6, r1	; 0x06
 364:	83 81       	ldd	r24, Z+3	; 0x03
 366:	81 ff       	sbrs	r24, 1
 368:	bd c1       	rjmp	.+890    	; 0x6e4 <__stack+0x1e5>
 36a:	ce 01       	movw	r24, r28
 36c:	01 96       	adiw	r24, 0x01	; 1
 36e:	4c 01       	movw	r8, r24
 370:	f7 01       	movw	r30, r14
 372:	93 81       	ldd	r25, Z+3	; 0x03
 374:	f6 01       	movw	r30, r12
 376:	93 fd       	sbrc	r25, 3
 378:	85 91       	lpm	r24, Z+
 37a:	93 ff       	sbrs	r25, 3
 37c:	81 91       	ld	r24, Z+
 37e:	6f 01       	movw	r12, r30
 380:	88 23       	and	r24, r24
 382:	09 f4       	brne	.+2      	; 0x386 <vfprintf+0x3a>
 384:	ab c1       	rjmp	.+854    	; 0x6dc <__stack+0x1dd>
 386:	85 32       	cpi	r24, 0x25	; 37
 388:	39 f4       	brne	.+14     	; 0x398 <vfprintf+0x4c>
 38a:	93 fd       	sbrc	r25, 3
 38c:	85 91       	lpm	r24, Z+
 38e:	93 ff       	sbrs	r25, 3
 390:	81 91       	ld	r24, Z+
 392:	6f 01       	movw	r12, r30
 394:	85 32       	cpi	r24, 0x25	; 37
 396:	29 f4       	brne	.+10     	; 0x3a2 <vfprintf+0x56>
 398:	b7 01       	movw	r22, r14
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <fputc>
 3a0:	e7 cf       	rjmp	.-50     	; 0x370 <vfprintf+0x24>
 3a2:	51 2c       	mov	r5, r1
 3a4:	31 2c       	mov	r3, r1
 3a6:	20 e0       	ldi	r18, 0x00	; 0
 3a8:	20 32       	cpi	r18, 0x20	; 32
 3aa:	a0 f4       	brcc	.+40     	; 0x3d4 <vfprintf+0x88>
 3ac:	8b 32       	cpi	r24, 0x2B	; 43
 3ae:	69 f0       	breq	.+26     	; 0x3ca <vfprintf+0x7e>
 3b0:	30 f4       	brcc	.+12     	; 0x3be <vfprintf+0x72>
 3b2:	80 32       	cpi	r24, 0x20	; 32
 3b4:	59 f0       	breq	.+22     	; 0x3cc <vfprintf+0x80>
 3b6:	83 32       	cpi	r24, 0x23	; 35
 3b8:	69 f4       	brne	.+26     	; 0x3d4 <vfprintf+0x88>
 3ba:	20 61       	ori	r18, 0x10	; 16
 3bc:	2c c0       	rjmp	.+88     	; 0x416 <vfprintf+0xca>
 3be:	8d 32       	cpi	r24, 0x2D	; 45
 3c0:	39 f0       	breq	.+14     	; 0x3d0 <vfprintf+0x84>
 3c2:	80 33       	cpi	r24, 0x30	; 48
 3c4:	39 f4       	brne	.+14     	; 0x3d4 <vfprintf+0x88>
 3c6:	21 60       	ori	r18, 0x01	; 1
 3c8:	26 c0       	rjmp	.+76     	; 0x416 <vfprintf+0xca>
 3ca:	22 60       	ori	r18, 0x02	; 2
 3cc:	24 60       	ori	r18, 0x04	; 4
 3ce:	23 c0       	rjmp	.+70     	; 0x416 <vfprintf+0xca>
 3d0:	28 60       	ori	r18, 0x08	; 8
 3d2:	21 c0       	rjmp	.+66     	; 0x416 <vfprintf+0xca>
 3d4:	27 fd       	sbrc	r18, 7
 3d6:	27 c0       	rjmp	.+78     	; 0x426 <vfprintf+0xda>
 3d8:	30 ed       	ldi	r19, 0xD0	; 208
 3da:	38 0f       	add	r19, r24
 3dc:	3a 30       	cpi	r19, 0x0A	; 10
 3de:	78 f4       	brcc	.+30     	; 0x3fe <vfprintf+0xb2>
 3e0:	26 ff       	sbrs	r18, 6
 3e2:	06 c0       	rjmp	.+12     	; 0x3f0 <vfprintf+0xa4>
 3e4:	fa e0       	ldi	r31, 0x0A	; 10
 3e6:	5f 9e       	mul	r5, r31
 3e8:	30 0d       	add	r19, r0
 3ea:	11 24       	eor	r1, r1
 3ec:	53 2e       	mov	r5, r19
 3ee:	13 c0       	rjmp	.+38     	; 0x416 <vfprintf+0xca>
 3f0:	8a e0       	ldi	r24, 0x0A	; 10
 3f2:	38 9e       	mul	r3, r24
 3f4:	30 0d       	add	r19, r0
 3f6:	11 24       	eor	r1, r1
 3f8:	33 2e       	mov	r3, r19
 3fa:	20 62       	ori	r18, 0x20	; 32
 3fc:	0c c0       	rjmp	.+24     	; 0x416 <vfprintf+0xca>
 3fe:	8e 32       	cpi	r24, 0x2E	; 46
 400:	21 f4       	brne	.+8      	; 0x40a <vfprintf+0xbe>
 402:	26 fd       	sbrc	r18, 6
 404:	6b c1       	rjmp	.+726    	; 0x6dc <__stack+0x1dd>
 406:	20 64       	ori	r18, 0x40	; 64
 408:	06 c0       	rjmp	.+12     	; 0x416 <vfprintf+0xca>
 40a:	8c 36       	cpi	r24, 0x6C	; 108
 40c:	11 f4       	brne	.+4      	; 0x412 <vfprintf+0xc6>
 40e:	20 68       	ori	r18, 0x80	; 128
 410:	02 c0       	rjmp	.+4      	; 0x416 <vfprintf+0xca>
 412:	88 36       	cpi	r24, 0x68	; 104
 414:	41 f4       	brne	.+16     	; 0x426 <vfprintf+0xda>
 416:	f6 01       	movw	r30, r12
 418:	93 fd       	sbrc	r25, 3
 41a:	85 91       	lpm	r24, Z+
 41c:	93 ff       	sbrs	r25, 3
 41e:	81 91       	ld	r24, Z+
 420:	6f 01       	movw	r12, r30
 422:	81 11       	cpse	r24, r1
 424:	c1 cf       	rjmp	.-126    	; 0x3a8 <vfprintf+0x5c>
 426:	98 2f       	mov	r25, r24
 428:	9f 7d       	andi	r25, 0xDF	; 223
 42a:	95 54       	subi	r25, 0x45	; 69
 42c:	93 30       	cpi	r25, 0x03	; 3
 42e:	28 f4       	brcc	.+10     	; 0x43a <vfprintf+0xee>
 430:	0c 5f       	subi	r16, 0xFC	; 252
 432:	1f 4f       	sbci	r17, 0xFF	; 255
 434:	ff e3       	ldi	r31, 0x3F	; 63
 436:	f9 83       	std	Y+1, r31	; 0x01
 438:	0d c0       	rjmp	.+26     	; 0x454 <vfprintf+0x108>
 43a:	83 36       	cpi	r24, 0x63	; 99
 43c:	31 f0       	breq	.+12     	; 0x44a <vfprintf+0xfe>
 43e:	83 37       	cpi	r24, 0x73	; 115
 440:	71 f0       	breq	.+28     	; 0x45e <vfprintf+0x112>
 442:	83 35       	cpi	r24, 0x53	; 83
 444:	09 f0       	breq	.+2      	; 0x448 <vfprintf+0xfc>
 446:	5b c0       	rjmp	.+182    	; 0x4fe <vfprintf+0x1b2>
 448:	22 c0       	rjmp	.+68     	; 0x48e <vfprintf+0x142>
 44a:	f8 01       	movw	r30, r16
 44c:	80 81       	ld	r24, Z
 44e:	89 83       	std	Y+1, r24	; 0x01
 450:	0e 5f       	subi	r16, 0xFE	; 254
 452:	1f 4f       	sbci	r17, 0xFF	; 255
 454:	44 24       	eor	r4, r4
 456:	43 94       	inc	r4
 458:	51 2c       	mov	r5, r1
 45a:	54 01       	movw	r10, r8
 45c:	15 c0       	rjmp	.+42     	; 0x488 <vfprintf+0x13c>
 45e:	38 01       	movw	r6, r16
 460:	f2 e0       	ldi	r31, 0x02	; 2
 462:	6f 0e       	add	r6, r31
 464:	71 1c       	adc	r7, r1
 466:	f8 01       	movw	r30, r16
 468:	a0 80       	ld	r10, Z
 46a:	b1 80       	ldd	r11, Z+1	; 0x01
 46c:	26 ff       	sbrs	r18, 6
 46e:	03 c0       	rjmp	.+6      	; 0x476 <vfprintf+0x12a>
 470:	65 2d       	mov	r22, r5
 472:	70 e0       	ldi	r23, 0x00	; 0
 474:	02 c0       	rjmp	.+4      	; 0x47a <vfprintf+0x12e>
 476:	6f ef       	ldi	r22, 0xFF	; 255
 478:	7f ef       	ldi	r23, 0xFF	; 255
 47a:	c5 01       	movw	r24, r10
 47c:	2c 87       	std	Y+12, r18	; 0x0c
 47e:	0e 94 cd 04 	call	0x99a	; 0x99a <strnlen>
 482:	2c 01       	movw	r4, r24
 484:	83 01       	movw	r16, r6
 486:	2c 85       	ldd	r18, Y+12	; 0x0c
 488:	2f 77       	andi	r18, 0x7F	; 127
 48a:	22 2e       	mov	r2, r18
 48c:	17 c0       	rjmp	.+46     	; 0x4bc <vfprintf+0x170>
 48e:	38 01       	movw	r6, r16
 490:	f2 e0       	ldi	r31, 0x02	; 2
 492:	6f 0e       	add	r6, r31
 494:	71 1c       	adc	r7, r1
 496:	f8 01       	movw	r30, r16
 498:	a0 80       	ld	r10, Z
 49a:	b1 80       	ldd	r11, Z+1	; 0x01
 49c:	26 ff       	sbrs	r18, 6
 49e:	03 c0       	rjmp	.+6      	; 0x4a6 <vfprintf+0x15a>
 4a0:	65 2d       	mov	r22, r5
 4a2:	70 e0       	ldi	r23, 0x00	; 0
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <vfprintf+0x15e>
 4a6:	6f ef       	ldi	r22, 0xFF	; 255
 4a8:	7f ef       	ldi	r23, 0xFF	; 255
 4aa:	c5 01       	movw	r24, r10
 4ac:	2c 87       	std	Y+12, r18	; 0x0c
 4ae:	0e 94 bb 04 	call	0x976	; 0x976 <strnlen_P>
 4b2:	2c 01       	movw	r4, r24
 4b4:	2c 85       	ldd	r18, Y+12	; 0x0c
 4b6:	20 68       	ori	r18, 0x80	; 128
 4b8:	22 2e       	mov	r2, r18
 4ba:	83 01       	movw	r16, r6
 4bc:	23 fc       	sbrc	r2, 3
 4be:	1b c0       	rjmp	.+54     	; 0x4f6 <vfprintf+0x1aa>
 4c0:	83 2d       	mov	r24, r3
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	48 16       	cp	r4, r24
 4c6:	59 06       	cpc	r5, r25
 4c8:	b0 f4       	brcc	.+44     	; 0x4f6 <vfprintf+0x1aa>
 4ca:	b7 01       	movw	r22, r14
 4cc:	80 e2       	ldi	r24, 0x20	; 32
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <fputc>
 4d4:	3a 94       	dec	r3
 4d6:	f4 cf       	rjmp	.-24     	; 0x4c0 <vfprintf+0x174>
 4d8:	f5 01       	movw	r30, r10
 4da:	27 fc       	sbrc	r2, 7
 4dc:	85 91       	lpm	r24, Z+
 4de:	27 fe       	sbrs	r2, 7
 4e0:	81 91       	ld	r24, Z+
 4e2:	5f 01       	movw	r10, r30
 4e4:	b7 01       	movw	r22, r14
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <fputc>
 4ec:	31 10       	cpse	r3, r1
 4ee:	3a 94       	dec	r3
 4f0:	f1 e0       	ldi	r31, 0x01	; 1
 4f2:	4f 1a       	sub	r4, r31
 4f4:	51 08       	sbc	r5, r1
 4f6:	41 14       	cp	r4, r1
 4f8:	51 04       	cpc	r5, r1
 4fa:	71 f7       	brne	.-36     	; 0x4d8 <vfprintf+0x18c>
 4fc:	e5 c0       	rjmp	.+458    	; 0x6c8 <__stack+0x1c9>
 4fe:	84 36       	cpi	r24, 0x64	; 100
 500:	11 f0       	breq	.+4      	; 0x506 <__stack+0x7>
 502:	89 36       	cpi	r24, 0x69	; 105
 504:	39 f5       	brne	.+78     	; 0x554 <__stack+0x55>
 506:	f8 01       	movw	r30, r16
 508:	27 ff       	sbrs	r18, 7
 50a:	07 c0       	rjmp	.+14     	; 0x51a <__stack+0x1b>
 50c:	60 81       	ld	r22, Z
 50e:	71 81       	ldd	r23, Z+1	; 0x01
 510:	82 81       	ldd	r24, Z+2	; 0x02
 512:	93 81       	ldd	r25, Z+3	; 0x03
 514:	0c 5f       	subi	r16, 0xFC	; 252
 516:	1f 4f       	sbci	r17, 0xFF	; 255
 518:	08 c0       	rjmp	.+16     	; 0x52a <__stack+0x2b>
 51a:	60 81       	ld	r22, Z
 51c:	71 81       	ldd	r23, Z+1	; 0x01
 51e:	88 27       	eor	r24, r24
 520:	77 fd       	sbrc	r23, 7
 522:	80 95       	com	r24
 524:	98 2f       	mov	r25, r24
 526:	0e 5f       	subi	r16, 0xFE	; 254
 528:	1f 4f       	sbci	r17, 0xFF	; 255
 52a:	2f 76       	andi	r18, 0x6F	; 111
 52c:	b2 2e       	mov	r11, r18
 52e:	97 ff       	sbrs	r25, 7
 530:	09 c0       	rjmp	.+18     	; 0x544 <__stack+0x45>
 532:	90 95       	com	r25
 534:	80 95       	com	r24
 536:	70 95       	com	r23
 538:	61 95       	neg	r22
 53a:	7f 4f       	sbci	r23, 0xFF	; 255
 53c:	8f 4f       	sbci	r24, 0xFF	; 255
 53e:	9f 4f       	sbci	r25, 0xFF	; 255
 540:	20 68       	ori	r18, 0x80	; 128
 542:	b2 2e       	mov	r11, r18
 544:	2a e0       	ldi	r18, 0x0A	; 10
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	a4 01       	movw	r20, r8
 54a:	0e 94 0a 05 	call	0xa14	; 0xa14 <__ultoa_invert>
 54e:	a8 2e       	mov	r10, r24
 550:	a8 18       	sub	r10, r8
 552:	44 c0       	rjmp	.+136    	; 0x5dc <__stack+0xdd>
 554:	85 37       	cpi	r24, 0x75	; 117
 556:	29 f4       	brne	.+10     	; 0x562 <__stack+0x63>
 558:	2f 7e       	andi	r18, 0xEF	; 239
 55a:	b2 2e       	mov	r11, r18
 55c:	2a e0       	ldi	r18, 0x0A	; 10
 55e:	30 e0       	ldi	r19, 0x00	; 0
 560:	25 c0       	rjmp	.+74     	; 0x5ac <__stack+0xad>
 562:	f2 2f       	mov	r31, r18
 564:	f9 7f       	andi	r31, 0xF9	; 249
 566:	bf 2e       	mov	r11, r31
 568:	8f 36       	cpi	r24, 0x6F	; 111
 56a:	c1 f0       	breq	.+48     	; 0x59c <__stack+0x9d>
 56c:	18 f4       	brcc	.+6      	; 0x574 <__stack+0x75>
 56e:	88 35       	cpi	r24, 0x58	; 88
 570:	79 f0       	breq	.+30     	; 0x590 <__stack+0x91>
 572:	b4 c0       	rjmp	.+360    	; 0x6dc <__stack+0x1dd>
 574:	80 37       	cpi	r24, 0x70	; 112
 576:	19 f0       	breq	.+6      	; 0x57e <__stack+0x7f>
 578:	88 37       	cpi	r24, 0x78	; 120
 57a:	21 f0       	breq	.+8      	; 0x584 <__stack+0x85>
 57c:	af c0       	rjmp	.+350    	; 0x6dc <__stack+0x1dd>
 57e:	2f 2f       	mov	r18, r31
 580:	20 61       	ori	r18, 0x10	; 16
 582:	b2 2e       	mov	r11, r18
 584:	b4 fe       	sbrs	r11, 4
 586:	0d c0       	rjmp	.+26     	; 0x5a2 <__stack+0xa3>
 588:	8b 2d       	mov	r24, r11
 58a:	84 60       	ori	r24, 0x04	; 4
 58c:	b8 2e       	mov	r11, r24
 58e:	09 c0       	rjmp	.+18     	; 0x5a2 <__stack+0xa3>
 590:	24 ff       	sbrs	r18, 4
 592:	0a c0       	rjmp	.+20     	; 0x5a8 <__stack+0xa9>
 594:	9f 2f       	mov	r25, r31
 596:	96 60       	ori	r25, 0x06	; 6
 598:	b9 2e       	mov	r11, r25
 59a:	06 c0       	rjmp	.+12     	; 0x5a8 <__stack+0xa9>
 59c:	28 e0       	ldi	r18, 0x08	; 8
 59e:	30 e0       	ldi	r19, 0x00	; 0
 5a0:	05 c0       	rjmp	.+10     	; 0x5ac <__stack+0xad>
 5a2:	20 e1       	ldi	r18, 0x10	; 16
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <__stack+0xad>
 5a8:	20 e1       	ldi	r18, 0x10	; 16
 5aa:	32 e0       	ldi	r19, 0x02	; 2
 5ac:	f8 01       	movw	r30, r16
 5ae:	b7 fe       	sbrs	r11, 7
 5b0:	07 c0       	rjmp	.+14     	; 0x5c0 <__stack+0xc1>
 5b2:	60 81       	ld	r22, Z
 5b4:	71 81       	ldd	r23, Z+1	; 0x01
 5b6:	82 81       	ldd	r24, Z+2	; 0x02
 5b8:	93 81       	ldd	r25, Z+3	; 0x03
 5ba:	0c 5f       	subi	r16, 0xFC	; 252
 5bc:	1f 4f       	sbci	r17, 0xFF	; 255
 5be:	06 c0       	rjmp	.+12     	; 0x5cc <__stack+0xcd>
 5c0:	60 81       	ld	r22, Z
 5c2:	71 81       	ldd	r23, Z+1	; 0x01
 5c4:	80 e0       	ldi	r24, 0x00	; 0
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 5f       	subi	r16, 0xFE	; 254
 5ca:	1f 4f       	sbci	r17, 0xFF	; 255
 5cc:	a4 01       	movw	r20, r8
 5ce:	0e 94 0a 05 	call	0xa14	; 0xa14 <__ultoa_invert>
 5d2:	a8 2e       	mov	r10, r24
 5d4:	a8 18       	sub	r10, r8
 5d6:	fb 2d       	mov	r31, r11
 5d8:	ff 77       	andi	r31, 0x7F	; 127
 5da:	bf 2e       	mov	r11, r31
 5dc:	b6 fe       	sbrs	r11, 6
 5de:	0b c0       	rjmp	.+22     	; 0x5f6 <__stack+0xf7>
 5e0:	2b 2d       	mov	r18, r11
 5e2:	2e 7f       	andi	r18, 0xFE	; 254
 5e4:	a5 14       	cp	r10, r5
 5e6:	50 f4       	brcc	.+20     	; 0x5fc <__stack+0xfd>
 5e8:	b4 fe       	sbrs	r11, 4
 5ea:	0a c0       	rjmp	.+20     	; 0x600 <__stack+0x101>
 5ec:	b2 fc       	sbrc	r11, 2
 5ee:	08 c0       	rjmp	.+16     	; 0x600 <__stack+0x101>
 5f0:	2b 2d       	mov	r18, r11
 5f2:	2e 7e       	andi	r18, 0xEE	; 238
 5f4:	05 c0       	rjmp	.+10     	; 0x600 <__stack+0x101>
 5f6:	7a 2c       	mov	r7, r10
 5f8:	2b 2d       	mov	r18, r11
 5fa:	03 c0       	rjmp	.+6      	; 0x602 <__stack+0x103>
 5fc:	7a 2c       	mov	r7, r10
 5fe:	01 c0       	rjmp	.+2      	; 0x602 <__stack+0x103>
 600:	75 2c       	mov	r7, r5
 602:	24 ff       	sbrs	r18, 4
 604:	0d c0       	rjmp	.+26     	; 0x620 <__stack+0x121>
 606:	fe 01       	movw	r30, r28
 608:	ea 0d       	add	r30, r10
 60a:	f1 1d       	adc	r31, r1
 60c:	80 81       	ld	r24, Z
 60e:	80 33       	cpi	r24, 0x30	; 48
 610:	11 f4       	brne	.+4      	; 0x616 <__stack+0x117>
 612:	29 7e       	andi	r18, 0xE9	; 233
 614:	09 c0       	rjmp	.+18     	; 0x628 <__stack+0x129>
 616:	22 ff       	sbrs	r18, 2
 618:	06 c0       	rjmp	.+12     	; 0x626 <__stack+0x127>
 61a:	73 94       	inc	r7
 61c:	73 94       	inc	r7
 61e:	04 c0       	rjmp	.+8      	; 0x628 <__stack+0x129>
 620:	82 2f       	mov	r24, r18
 622:	86 78       	andi	r24, 0x86	; 134
 624:	09 f0       	breq	.+2      	; 0x628 <__stack+0x129>
 626:	73 94       	inc	r7
 628:	23 fd       	sbrc	r18, 3
 62a:	13 c0       	rjmp	.+38     	; 0x652 <__stack+0x153>
 62c:	20 ff       	sbrs	r18, 0
 62e:	06 c0       	rjmp	.+12     	; 0x63c <__stack+0x13d>
 630:	5a 2c       	mov	r5, r10
 632:	73 14       	cp	r7, r3
 634:	18 f4       	brcc	.+6      	; 0x63c <__stack+0x13d>
 636:	53 0c       	add	r5, r3
 638:	57 18       	sub	r5, r7
 63a:	73 2c       	mov	r7, r3
 63c:	73 14       	cp	r7, r3
 63e:	68 f4       	brcc	.+26     	; 0x65a <__stack+0x15b>
 640:	b7 01       	movw	r22, r14
 642:	80 e2       	ldi	r24, 0x20	; 32
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	2c 87       	std	Y+12, r18	; 0x0c
 648:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <fputc>
 64c:	73 94       	inc	r7
 64e:	2c 85       	ldd	r18, Y+12	; 0x0c
 650:	f5 cf       	rjmp	.-22     	; 0x63c <__stack+0x13d>
 652:	73 14       	cp	r7, r3
 654:	10 f4       	brcc	.+4      	; 0x65a <__stack+0x15b>
 656:	37 18       	sub	r3, r7
 658:	01 c0       	rjmp	.+2      	; 0x65c <__stack+0x15d>
 65a:	31 2c       	mov	r3, r1
 65c:	24 ff       	sbrs	r18, 4
 65e:	12 c0       	rjmp	.+36     	; 0x684 <__stack+0x185>
 660:	b7 01       	movw	r22, r14
 662:	80 e3       	ldi	r24, 0x30	; 48
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	2c 87       	std	Y+12, r18	; 0x0c
 668:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <fputc>
 66c:	2c 85       	ldd	r18, Y+12	; 0x0c
 66e:	22 ff       	sbrs	r18, 2
 670:	17 c0       	rjmp	.+46     	; 0x6a0 <__stack+0x1a1>
 672:	21 ff       	sbrs	r18, 1
 674:	03 c0       	rjmp	.+6      	; 0x67c <__stack+0x17d>
 676:	88 e5       	ldi	r24, 0x58	; 88
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	02 c0       	rjmp	.+4      	; 0x680 <__stack+0x181>
 67c:	88 e7       	ldi	r24, 0x78	; 120
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	b7 01       	movw	r22, r14
 682:	0c c0       	rjmp	.+24     	; 0x69c <__stack+0x19d>
 684:	82 2f       	mov	r24, r18
 686:	86 78       	andi	r24, 0x86	; 134
 688:	59 f0       	breq	.+22     	; 0x6a0 <__stack+0x1a1>
 68a:	21 fd       	sbrc	r18, 1
 68c:	02 c0       	rjmp	.+4      	; 0x692 <__stack+0x193>
 68e:	80 e2       	ldi	r24, 0x20	; 32
 690:	01 c0       	rjmp	.+2      	; 0x694 <__stack+0x195>
 692:	8b e2       	ldi	r24, 0x2B	; 43
 694:	27 fd       	sbrc	r18, 7
 696:	8d e2       	ldi	r24, 0x2D	; 45
 698:	b7 01       	movw	r22, r14
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <fputc>
 6a0:	a5 14       	cp	r10, r5
 6a2:	38 f4       	brcc	.+14     	; 0x6b2 <__stack+0x1b3>
 6a4:	b7 01       	movw	r22, r14
 6a6:	80 e3       	ldi	r24, 0x30	; 48
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <fputc>
 6ae:	5a 94       	dec	r5
 6b0:	f7 cf       	rjmp	.-18     	; 0x6a0 <__stack+0x1a1>
 6b2:	aa 94       	dec	r10
 6b4:	f4 01       	movw	r30, r8
 6b6:	ea 0d       	add	r30, r10
 6b8:	f1 1d       	adc	r31, r1
 6ba:	80 81       	ld	r24, Z
 6bc:	b7 01       	movw	r22, r14
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <fputc>
 6c4:	a1 10       	cpse	r10, r1
 6c6:	f5 cf       	rjmp	.-22     	; 0x6b2 <__stack+0x1b3>
 6c8:	33 20       	and	r3, r3
 6ca:	09 f4       	brne	.+2      	; 0x6ce <__stack+0x1cf>
 6cc:	51 ce       	rjmp	.-862    	; 0x370 <vfprintf+0x24>
 6ce:	b7 01       	movw	r22, r14
 6d0:	80 e2       	ldi	r24, 0x20	; 32
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <fputc>
 6d8:	3a 94       	dec	r3
 6da:	f6 cf       	rjmp	.-20     	; 0x6c8 <__stack+0x1c9>
 6dc:	f7 01       	movw	r30, r14
 6de:	86 81       	ldd	r24, Z+6	; 0x06
 6e0:	97 81       	ldd	r25, Z+7	; 0x07
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <__stack+0x1e9>
 6e4:	8f ef       	ldi	r24, 0xFF	; 255
 6e6:	9f ef       	ldi	r25, 0xFF	; 255
 6e8:	2c 96       	adiw	r28, 0x0c	; 12
 6ea:	e2 e1       	ldi	r30, 0x12	; 18
 6ec:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__epilogue_restores__>

000006f0 <calloc>:
 6f0:	0f 93       	push	r16
 6f2:	1f 93       	push	r17
 6f4:	cf 93       	push	r28
 6f6:	df 93       	push	r29
 6f8:	86 9f       	mul	r24, r22
 6fa:	80 01       	movw	r16, r0
 6fc:	87 9f       	mul	r24, r23
 6fe:	10 0d       	add	r17, r0
 700:	96 9f       	mul	r25, r22
 702:	10 0d       	add	r17, r0
 704:	11 24       	eor	r1, r1
 706:	c8 01       	movw	r24, r16
 708:	0e 94 94 03 	call	0x728	; 0x728 <malloc>
 70c:	ec 01       	movw	r28, r24
 70e:	00 97       	sbiw	r24, 0x00	; 0
 710:	29 f0       	breq	.+10     	; 0x71c <calloc+0x2c>
 712:	a8 01       	movw	r20, r16
 714:	60 e0       	ldi	r22, 0x00	; 0
 716:	70 e0       	ldi	r23, 0x00	; 0
 718:	0e 94 c6 04 	call	0x98c	; 0x98c <memset>
 71c:	ce 01       	movw	r24, r28
 71e:	df 91       	pop	r29
 720:	cf 91       	pop	r28
 722:	1f 91       	pop	r17
 724:	0f 91       	pop	r16
 726:	08 95       	ret

00000728 <malloc>:
 728:	cf 93       	push	r28
 72a:	df 93       	push	r29
 72c:	82 30       	cpi	r24, 0x02	; 2
 72e:	91 05       	cpc	r25, r1
 730:	10 f4       	brcc	.+4      	; 0x736 <malloc+0xe>
 732:	82 e0       	ldi	r24, 0x02	; 2
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	e0 91 3f 01 	lds	r30, 0x013F
 73a:	f0 91 40 01 	lds	r31, 0x0140
 73e:	20 e0       	ldi	r18, 0x00	; 0
 740:	30 e0       	ldi	r19, 0x00	; 0
 742:	a0 e0       	ldi	r26, 0x00	; 0
 744:	b0 e0       	ldi	r27, 0x00	; 0
 746:	30 97       	sbiw	r30, 0x00	; 0
 748:	39 f1       	breq	.+78     	; 0x798 <malloc+0x70>
 74a:	40 81       	ld	r20, Z
 74c:	51 81       	ldd	r21, Z+1	; 0x01
 74e:	48 17       	cp	r20, r24
 750:	59 07       	cpc	r21, r25
 752:	b8 f0       	brcs	.+46     	; 0x782 <malloc+0x5a>
 754:	48 17       	cp	r20, r24
 756:	59 07       	cpc	r21, r25
 758:	71 f4       	brne	.+28     	; 0x776 <malloc+0x4e>
 75a:	82 81       	ldd	r24, Z+2	; 0x02
 75c:	93 81       	ldd	r25, Z+3	; 0x03
 75e:	10 97       	sbiw	r26, 0x00	; 0
 760:	29 f0       	breq	.+10     	; 0x76c <malloc+0x44>
 762:	13 96       	adiw	r26, 0x03	; 3
 764:	9c 93       	st	X, r25
 766:	8e 93       	st	-X, r24
 768:	12 97       	sbiw	r26, 0x02	; 2
 76a:	2c c0       	rjmp	.+88     	; 0x7c4 <malloc+0x9c>
 76c:	90 93 40 01 	sts	0x0140, r25
 770:	80 93 3f 01 	sts	0x013F, r24
 774:	27 c0       	rjmp	.+78     	; 0x7c4 <malloc+0x9c>
 776:	21 15       	cp	r18, r1
 778:	31 05       	cpc	r19, r1
 77a:	31 f0       	breq	.+12     	; 0x788 <malloc+0x60>
 77c:	42 17       	cp	r20, r18
 77e:	53 07       	cpc	r21, r19
 780:	18 f0       	brcs	.+6      	; 0x788 <malloc+0x60>
 782:	a9 01       	movw	r20, r18
 784:	db 01       	movw	r26, r22
 786:	01 c0       	rjmp	.+2      	; 0x78a <malloc+0x62>
 788:	ef 01       	movw	r28, r30
 78a:	9a 01       	movw	r18, r20
 78c:	bd 01       	movw	r22, r26
 78e:	df 01       	movw	r26, r30
 790:	02 80       	ldd	r0, Z+2	; 0x02
 792:	f3 81       	ldd	r31, Z+3	; 0x03
 794:	e0 2d       	mov	r30, r0
 796:	d7 cf       	rjmp	.-82     	; 0x746 <malloc+0x1e>
 798:	21 15       	cp	r18, r1
 79a:	31 05       	cpc	r19, r1
 79c:	f9 f0       	breq	.+62     	; 0x7dc <malloc+0xb4>
 79e:	28 1b       	sub	r18, r24
 7a0:	39 0b       	sbc	r19, r25
 7a2:	24 30       	cpi	r18, 0x04	; 4
 7a4:	31 05       	cpc	r19, r1
 7a6:	80 f4       	brcc	.+32     	; 0x7c8 <malloc+0xa0>
 7a8:	8a 81       	ldd	r24, Y+2	; 0x02
 7aa:	9b 81       	ldd	r25, Y+3	; 0x03
 7ac:	61 15       	cp	r22, r1
 7ae:	71 05       	cpc	r23, r1
 7b0:	21 f0       	breq	.+8      	; 0x7ba <malloc+0x92>
 7b2:	fb 01       	movw	r30, r22
 7b4:	93 83       	std	Z+3, r25	; 0x03
 7b6:	82 83       	std	Z+2, r24	; 0x02
 7b8:	04 c0       	rjmp	.+8      	; 0x7c2 <malloc+0x9a>
 7ba:	90 93 40 01 	sts	0x0140, r25
 7be:	80 93 3f 01 	sts	0x013F, r24
 7c2:	fe 01       	movw	r30, r28
 7c4:	32 96       	adiw	r30, 0x02	; 2
 7c6:	44 c0       	rjmp	.+136    	; 0x850 <malloc+0x128>
 7c8:	fe 01       	movw	r30, r28
 7ca:	e2 0f       	add	r30, r18
 7cc:	f3 1f       	adc	r31, r19
 7ce:	81 93       	st	Z+, r24
 7d0:	91 93       	st	Z+, r25
 7d2:	22 50       	subi	r18, 0x02	; 2
 7d4:	31 09       	sbc	r19, r1
 7d6:	39 83       	std	Y+1, r19	; 0x01
 7d8:	28 83       	st	Y, r18
 7da:	3a c0       	rjmp	.+116    	; 0x850 <malloc+0x128>
 7dc:	20 91 3d 01 	lds	r18, 0x013D
 7e0:	30 91 3e 01 	lds	r19, 0x013E
 7e4:	23 2b       	or	r18, r19
 7e6:	41 f4       	brne	.+16     	; 0x7f8 <malloc+0xd0>
 7e8:	20 91 02 01 	lds	r18, 0x0102
 7ec:	30 91 03 01 	lds	r19, 0x0103
 7f0:	30 93 3e 01 	sts	0x013E, r19
 7f4:	20 93 3d 01 	sts	0x013D, r18
 7f8:	20 91 00 01 	lds	r18, 0x0100
 7fc:	30 91 01 01 	lds	r19, 0x0101
 800:	21 15       	cp	r18, r1
 802:	31 05       	cpc	r19, r1
 804:	41 f4       	brne	.+16     	; 0x816 <malloc+0xee>
 806:	2d b7       	in	r18, 0x3d	; 61
 808:	3e b7       	in	r19, 0x3e	; 62
 80a:	40 91 04 01 	lds	r20, 0x0104
 80e:	50 91 05 01 	lds	r21, 0x0105
 812:	24 1b       	sub	r18, r20
 814:	35 0b       	sbc	r19, r21
 816:	e0 91 3d 01 	lds	r30, 0x013D
 81a:	f0 91 3e 01 	lds	r31, 0x013E
 81e:	e2 17       	cp	r30, r18
 820:	f3 07       	cpc	r31, r19
 822:	a0 f4       	brcc	.+40     	; 0x84c <malloc+0x124>
 824:	2e 1b       	sub	r18, r30
 826:	3f 0b       	sbc	r19, r31
 828:	28 17       	cp	r18, r24
 82a:	39 07       	cpc	r19, r25
 82c:	78 f0       	brcs	.+30     	; 0x84c <malloc+0x124>
 82e:	ac 01       	movw	r20, r24
 830:	4e 5f       	subi	r20, 0xFE	; 254
 832:	5f 4f       	sbci	r21, 0xFF	; 255
 834:	24 17       	cp	r18, r20
 836:	35 07       	cpc	r19, r21
 838:	48 f0       	brcs	.+18     	; 0x84c <malloc+0x124>
 83a:	4e 0f       	add	r20, r30
 83c:	5f 1f       	adc	r21, r31
 83e:	50 93 3e 01 	sts	0x013E, r21
 842:	40 93 3d 01 	sts	0x013D, r20
 846:	81 93       	st	Z+, r24
 848:	91 93       	st	Z+, r25
 84a:	02 c0       	rjmp	.+4      	; 0x850 <malloc+0x128>
 84c:	e0 e0       	ldi	r30, 0x00	; 0
 84e:	f0 e0       	ldi	r31, 0x00	; 0
 850:	cf 01       	movw	r24, r30
 852:	df 91       	pop	r29
 854:	cf 91       	pop	r28
 856:	08 95       	ret

00000858 <free>:
 858:	cf 93       	push	r28
 85a:	df 93       	push	r29
 85c:	00 97       	sbiw	r24, 0x00	; 0
 85e:	09 f4       	brne	.+2      	; 0x862 <free+0xa>
 860:	87 c0       	rjmp	.+270    	; 0x970 <free+0x118>
 862:	fc 01       	movw	r30, r24
 864:	32 97       	sbiw	r30, 0x02	; 2
 866:	13 82       	std	Z+3, r1	; 0x03
 868:	12 82       	std	Z+2, r1	; 0x02
 86a:	c0 91 3f 01 	lds	r28, 0x013F
 86e:	d0 91 40 01 	lds	r29, 0x0140
 872:	20 97       	sbiw	r28, 0x00	; 0
 874:	81 f4       	brne	.+32     	; 0x896 <free+0x3e>
 876:	20 81       	ld	r18, Z
 878:	31 81       	ldd	r19, Z+1	; 0x01
 87a:	28 0f       	add	r18, r24
 87c:	39 1f       	adc	r19, r25
 87e:	80 91 3d 01 	lds	r24, 0x013D
 882:	90 91 3e 01 	lds	r25, 0x013E
 886:	82 17       	cp	r24, r18
 888:	93 07       	cpc	r25, r19
 88a:	79 f5       	brne	.+94     	; 0x8ea <free+0x92>
 88c:	f0 93 3e 01 	sts	0x013E, r31
 890:	e0 93 3d 01 	sts	0x013D, r30
 894:	6d c0       	rjmp	.+218    	; 0x970 <free+0x118>
 896:	de 01       	movw	r26, r28
 898:	20 e0       	ldi	r18, 0x00	; 0
 89a:	30 e0       	ldi	r19, 0x00	; 0
 89c:	ae 17       	cp	r26, r30
 89e:	bf 07       	cpc	r27, r31
 8a0:	50 f4       	brcc	.+20     	; 0x8b6 <free+0x5e>
 8a2:	12 96       	adiw	r26, 0x02	; 2
 8a4:	4d 91       	ld	r20, X+
 8a6:	5c 91       	ld	r21, X
 8a8:	13 97       	sbiw	r26, 0x03	; 3
 8aa:	9d 01       	movw	r18, r26
 8ac:	41 15       	cp	r20, r1
 8ae:	51 05       	cpc	r21, r1
 8b0:	09 f1       	breq	.+66     	; 0x8f4 <free+0x9c>
 8b2:	da 01       	movw	r26, r20
 8b4:	f3 cf       	rjmp	.-26     	; 0x89c <free+0x44>
 8b6:	b3 83       	std	Z+3, r27	; 0x03
 8b8:	a2 83       	std	Z+2, r26	; 0x02
 8ba:	40 81       	ld	r20, Z
 8bc:	51 81       	ldd	r21, Z+1	; 0x01
 8be:	84 0f       	add	r24, r20
 8c0:	95 1f       	adc	r25, r21
 8c2:	8a 17       	cp	r24, r26
 8c4:	9b 07       	cpc	r25, r27
 8c6:	71 f4       	brne	.+28     	; 0x8e4 <free+0x8c>
 8c8:	8d 91       	ld	r24, X+
 8ca:	9c 91       	ld	r25, X
 8cc:	11 97       	sbiw	r26, 0x01	; 1
 8ce:	84 0f       	add	r24, r20
 8d0:	95 1f       	adc	r25, r21
 8d2:	02 96       	adiw	r24, 0x02	; 2
 8d4:	91 83       	std	Z+1, r25	; 0x01
 8d6:	80 83       	st	Z, r24
 8d8:	12 96       	adiw	r26, 0x02	; 2
 8da:	8d 91       	ld	r24, X+
 8dc:	9c 91       	ld	r25, X
 8de:	13 97       	sbiw	r26, 0x03	; 3
 8e0:	93 83       	std	Z+3, r25	; 0x03
 8e2:	82 83       	std	Z+2, r24	; 0x02
 8e4:	21 15       	cp	r18, r1
 8e6:	31 05       	cpc	r19, r1
 8e8:	29 f4       	brne	.+10     	; 0x8f4 <free+0x9c>
 8ea:	f0 93 40 01 	sts	0x0140, r31
 8ee:	e0 93 3f 01 	sts	0x013F, r30
 8f2:	3e c0       	rjmp	.+124    	; 0x970 <free+0x118>
 8f4:	d9 01       	movw	r26, r18
 8f6:	13 96       	adiw	r26, 0x03	; 3
 8f8:	fc 93       	st	X, r31
 8fa:	ee 93       	st	-X, r30
 8fc:	12 97       	sbiw	r26, 0x02	; 2
 8fe:	4d 91       	ld	r20, X+
 900:	5d 91       	ld	r21, X+
 902:	a4 0f       	add	r26, r20
 904:	b5 1f       	adc	r27, r21
 906:	ea 17       	cp	r30, r26
 908:	fb 07       	cpc	r31, r27
 90a:	79 f4       	brne	.+30     	; 0x92a <free+0xd2>
 90c:	80 81       	ld	r24, Z
 90e:	91 81       	ldd	r25, Z+1	; 0x01
 910:	84 0f       	add	r24, r20
 912:	95 1f       	adc	r25, r21
 914:	02 96       	adiw	r24, 0x02	; 2
 916:	d9 01       	movw	r26, r18
 918:	11 96       	adiw	r26, 0x01	; 1
 91a:	9c 93       	st	X, r25
 91c:	8e 93       	st	-X, r24
 91e:	82 81       	ldd	r24, Z+2	; 0x02
 920:	93 81       	ldd	r25, Z+3	; 0x03
 922:	13 96       	adiw	r26, 0x03	; 3
 924:	9c 93       	st	X, r25
 926:	8e 93       	st	-X, r24
 928:	12 97       	sbiw	r26, 0x02	; 2
 92a:	e0 e0       	ldi	r30, 0x00	; 0
 92c:	f0 e0       	ldi	r31, 0x00	; 0
 92e:	8a 81       	ldd	r24, Y+2	; 0x02
 930:	9b 81       	ldd	r25, Y+3	; 0x03
 932:	00 97       	sbiw	r24, 0x00	; 0
 934:	19 f0       	breq	.+6      	; 0x93c <free+0xe4>
 936:	fe 01       	movw	r30, r28
 938:	ec 01       	movw	r28, r24
 93a:	f9 cf       	rjmp	.-14     	; 0x92e <free+0xd6>
 93c:	ce 01       	movw	r24, r28
 93e:	02 96       	adiw	r24, 0x02	; 2
 940:	28 81       	ld	r18, Y
 942:	39 81       	ldd	r19, Y+1	; 0x01
 944:	82 0f       	add	r24, r18
 946:	93 1f       	adc	r25, r19
 948:	20 91 3d 01 	lds	r18, 0x013D
 94c:	30 91 3e 01 	lds	r19, 0x013E
 950:	28 17       	cp	r18, r24
 952:	39 07       	cpc	r19, r25
 954:	69 f4       	brne	.+26     	; 0x970 <free+0x118>
 956:	30 97       	sbiw	r30, 0x00	; 0
 958:	29 f4       	brne	.+10     	; 0x964 <free+0x10c>
 95a:	10 92 40 01 	sts	0x0140, r1
 95e:	10 92 3f 01 	sts	0x013F, r1
 962:	02 c0       	rjmp	.+4      	; 0x968 <free+0x110>
 964:	13 82       	std	Z+3, r1	; 0x03
 966:	12 82       	std	Z+2, r1	; 0x02
 968:	d0 93 3e 01 	sts	0x013E, r29
 96c:	c0 93 3d 01 	sts	0x013D, r28
 970:	df 91       	pop	r29
 972:	cf 91       	pop	r28
 974:	08 95       	ret

00000976 <strnlen_P>:
 976:	fc 01       	movw	r30, r24
 978:	05 90       	lpm	r0, Z+
 97a:	61 50       	subi	r22, 0x01	; 1
 97c:	70 40       	sbci	r23, 0x00	; 0
 97e:	01 10       	cpse	r0, r1
 980:	d8 f7       	brcc	.-10     	; 0x978 <strnlen_P+0x2>
 982:	80 95       	com	r24
 984:	90 95       	com	r25
 986:	8e 0f       	add	r24, r30
 988:	9f 1f       	adc	r25, r31
 98a:	08 95       	ret

0000098c <memset>:
 98c:	dc 01       	movw	r26, r24
 98e:	01 c0       	rjmp	.+2      	; 0x992 <memset+0x6>
 990:	6d 93       	st	X+, r22
 992:	41 50       	subi	r20, 0x01	; 1
 994:	50 40       	sbci	r21, 0x00	; 0
 996:	e0 f7       	brcc	.-8      	; 0x990 <memset+0x4>
 998:	08 95       	ret

0000099a <strnlen>:
 99a:	fc 01       	movw	r30, r24
 99c:	61 50       	subi	r22, 0x01	; 1
 99e:	70 40       	sbci	r23, 0x00	; 0
 9a0:	01 90       	ld	r0, Z+
 9a2:	01 10       	cpse	r0, r1
 9a4:	d8 f7       	brcc	.-10     	; 0x99c <strnlen+0x2>
 9a6:	80 95       	com	r24
 9a8:	90 95       	com	r25
 9aa:	8e 0f       	add	r24, r30
 9ac:	9f 1f       	adc	r25, r31
 9ae:	08 95       	ret

000009b0 <fputc>:
 9b0:	0f 93       	push	r16
 9b2:	1f 93       	push	r17
 9b4:	cf 93       	push	r28
 9b6:	df 93       	push	r29
 9b8:	18 2f       	mov	r17, r24
 9ba:	09 2f       	mov	r16, r25
 9bc:	eb 01       	movw	r28, r22
 9be:	8b 81       	ldd	r24, Y+3	; 0x03
 9c0:	81 fd       	sbrc	r24, 1
 9c2:	03 c0       	rjmp	.+6      	; 0x9ca <fputc+0x1a>
 9c4:	8f ef       	ldi	r24, 0xFF	; 255
 9c6:	9f ef       	ldi	r25, 0xFF	; 255
 9c8:	20 c0       	rjmp	.+64     	; 0xa0a <fputc+0x5a>
 9ca:	82 ff       	sbrs	r24, 2
 9cc:	10 c0       	rjmp	.+32     	; 0x9ee <fputc+0x3e>
 9ce:	4e 81       	ldd	r20, Y+6	; 0x06
 9d0:	5f 81       	ldd	r21, Y+7	; 0x07
 9d2:	2c 81       	ldd	r18, Y+4	; 0x04
 9d4:	3d 81       	ldd	r19, Y+5	; 0x05
 9d6:	42 17       	cp	r20, r18
 9d8:	53 07       	cpc	r21, r19
 9da:	7c f4       	brge	.+30     	; 0x9fa <fputc+0x4a>
 9dc:	e8 81       	ld	r30, Y
 9de:	f9 81       	ldd	r31, Y+1	; 0x01
 9e0:	9f 01       	movw	r18, r30
 9e2:	2f 5f       	subi	r18, 0xFF	; 255
 9e4:	3f 4f       	sbci	r19, 0xFF	; 255
 9e6:	39 83       	std	Y+1, r19	; 0x01
 9e8:	28 83       	st	Y, r18
 9ea:	10 83       	st	Z, r17
 9ec:	06 c0       	rjmp	.+12     	; 0x9fa <fputc+0x4a>
 9ee:	e8 85       	ldd	r30, Y+8	; 0x08
 9f0:	f9 85       	ldd	r31, Y+9	; 0x09
 9f2:	81 2f       	mov	r24, r17
 9f4:	09 95       	icall
 9f6:	89 2b       	or	r24, r25
 9f8:	29 f7       	brne	.-54     	; 0x9c4 <fputc+0x14>
 9fa:	2e 81       	ldd	r18, Y+6	; 0x06
 9fc:	3f 81       	ldd	r19, Y+7	; 0x07
 9fe:	2f 5f       	subi	r18, 0xFF	; 255
 a00:	3f 4f       	sbci	r19, 0xFF	; 255
 a02:	3f 83       	std	Y+7, r19	; 0x07
 a04:	2e 83       	std	Y+6, r18	; 0x06
 a06:	81 2f       	mov	r24, r17
 a08:	90 2f       	mov	r25, r16
 a0a:	df 91       	pop	r29
 a0c:	cf 91       	pop	r28
 a0e:	1f 91       	pop	r17
 a10:	0f 91       	pop	r16
 a12:	08 95       	ret

00000a14 <__ultoa_invert>:
 a14:	fa 01       	movw	r30, r20
 a16:	aa 27       	eor	r26, r26
 a18:	28 30       	cpi	r18, 0x08	; 8
 a1a:	51 f1       	breq	.+84     	; 0xa70 <__ultoa_invert+0x5c>
 a1c:	20 31       	cpi	r18, 0x10	; 16
 a1e:	81 f1       	breq	.+96     	; 0xa80 <__ultoa_invert+0x6c>
 a20:	e8 94       	clt
 a22:	6f 93       	push	r22
 a24:	6e 7f       	andi	r22, 0xFE	; 254
 a26:	6e 5f       	subi	r22, 0xFE	; 254
 a28:	7f 4f       	sbci	r23, 0xFF	; 255
 a2a:	8f 4f       	sbci	r24, 0xFF	; 255
 a2c:	9f 4f       	sbci	r25, 0xFF	; 255
 a2e:	af 4f       	sbci	r26, 0xFF	; 255
 a30:	b1 e0       	ldi	r27, 0x01	; 1
 a32:	3e d0       	rcall	.+124    	; 0xab0 <__ultoa_invert+0x9c>
 a34:	b4 e0       	ldi	r27, 0x04	; 4
 a36:	3c d0       	rcall	.+120    	; 0xab0 <__ultoa_invert+0x9c>
 a38:	67 0f       	add	r22, r23
 a3a:	78 1f       	adc	r23, r24
 a3c:	89 1f       	adc	r24, r25
 a3e:	9a 1f       	adc	r25, r26
 a40:	a1 1d       	adc	r26, r1
 a42:	68 0f       	add	r22, r24
 a44:	79 1f       	adc	r23, r25
 a46:	8a 1f       	adc	r24, r26
 a48:	91 1d       	adc	r25, r1
 a4a:	a1 1d       	adc	r26, r1
 a4c:	6a 0f       	add	r22, r26
 a4e:	71 1d       	adc	r23, r1
 a50:	81 1d       	adc	r24, r1
 a52:	91 1d       	adc	r25, r1
 a54:	a1 1d       	adc	r26, r1
 a56:	20 d0       	rcall	.+64     	; 0xa98 <__ultoa_invert+0x84>
 a58:	09 f4       	brne	.+2      	; 0xa5c <__ultoa_invert+0x48>
 a5a:	68 94       	set
 a5c:	3f 91       	pop	r19
 a5e:	2a e0       	ldi	r18, 0x0A	; 10
 a60:	26 9f       	mul	r18, r22
 a62:	11 24       	eor	r1, r1
 a64:	30 19       	sub	r19, r0
 a66:	30 5d       	subi	r19, 0xD0	; 208
 a68:	31 93       	st	Z+, r19
 a6a:	de f6       	brtc	.-74     	; 0xa22 <__ultoa_invert+0xe>
 a6c:	cf 01       	movw	r24, r30
 a6e:	08 95       	ret
 a70:	46 2f       	mov	r20, r22
 a72:	47 70       	andi	r20, 0x07	; 7
 a74:	40 5d       	subi	r20, 0xD0	; 208
 a76:	41 93       	st	Z+, r20
 a78:	b3 e0       	ldi	r27, 0x03	; 3
 a7a:	0f d0       	rcall	.+30     	; 0xa9a <__ultoa_invert+0x86>
 a7c:	c9 f7       	brne	.-14     	; 0xa70 <__ultoa_invert+0x5c>
 a7e:	f6 cf       	rjmp	.-20     	; 0xa6c <__ultoa_invert+0x58>
 a80:	46 2f       	mov	r20, r22
 a82:	4f 70       	andi	r20, 0x0F	; 15
 a84:	40 5d       	subi	r20, 0xD0	; 208
 a86:	4a 33       	cpi	r20, 0x3A	; 58
 a88:	18 f0       	brcs	.+6      	; 0xa90 <__ultoa_invert+0x7c>
 a8a:	49 5d       	subi	r20, 0xD9	; 217
 a8c:	31 fd       	sbrc	r19, 1
 a8e:	40 52       	subi	r20, 0x20	; 32
 a90:	41 93       	st	Z+, r20
 a92:	02 d0       	rcall	.+4      	; 0xa98 <__ultoa_invert+0x84>
 a94:	a9 f7       	brne	.-22     	; 0xa80 <__ultoa_invert+0x6c>
 a96:	ea cf       	rjmp	.-44     	; 0xa6c <__ultoa_invert+0x58>
 a98:	b4 e0       	ldi	r27, 0x04	; 4
 a9a:	a6 95       	lsr	r26
 a9c:	97 95       	ror	r25
 a9e:	87 95       	ror	r24
 aa0:	77 95       	ror	r23
 aa2:	67 95       	ror	r22
 aa4:	ba 95       	dec	r27
 aa6:	c9 f7       	brne	.-14     	; 0xa9a <__ultoa_invert+0x86>
 aa8:	00 97       	sbiw	r24, 0x00	; 0
 aaa:	61 05       	cpc	r22, r1
 aac:	71 05       	cpc	r23, r1
 aae:	08 95       	ret
 ab0:	9b 01       	movw	r18, r22
 ab2:	ac 01       	movw	r20, r24
 ab4:	0a 2e       	mov	r0, r26
 ab6:	06 94       	lsr	r0
 ab8:	57 95       	ror	r21
 aba:	47 95       	ror	r20
 abc:	37 95       	ror	r19
 abe:	27 95       	ror	r18
 ac0:	ba 95       	dec	r27
 ac2:	c9 f7       	brne	.-14     	; 0xab6 <__ultoa_invert+0xa2>
 ac4:	62 0f       	add	r22, r18
 ac6:	73 1f       	adc	r23, r19
 ac8:	84 1f       	adc	r24, r20
 aca:	95 1f       	adc	r25, r21
 acc:	a0 1d       	adc	r26, r0
 ace:	08 95       	ret

00000ad0 <__prologue_saves__>:
 ad0:	2f 92       	push	r2
 ad2:	3f 92       	push	r3
 ad4:	4f 92       	push	r4
 ad6:	5f 92       	push	r5
 ad8:	6f 92       	push	r6
 ada:	7f 92       	push	r7
 adc:	8f 92       	push	r8
 ade:	9f 92       	push	r9
 ae0:	af 92       	push	r10
 ae2:	bf 92       	push	r11
 ae4:	cf 92       	push	r12
 ae6:	df 92       	push	r13
 ae8:	ef 92       	push	r14
 aea:	ff 92       	push	r15
 aec:	0f 93       	push	r16
 aee:	1f 93       	push	r17
 af0:	cf 93       	push	r28
 af2:	df 93       	push	r29
 af4:	cd b7       	in	r28, 0x3d	; 61
 af6:	de b7       	in	r29, 0x3e	; 62
 af8:	ca 1b       	sub	r28, r26
 afa:	db 0b       	sbc	r29, r27
 afc:	0f b6       	in	r0, 0x3f	; 63
 afe:	f8 94       	cli
 b00:	de bf       	out	0x3e, r29	; 62
 b02:	0f be       	out	0x3f, r0	; 63
 b04:	cd bf       	out	0x3d, r28	; 61
 b06:	09 94       	ijmp

00000b08 <__epilogue_restores__>:
 b08:	2a 88       	ldd	r2, Y+18	; 0x12
 b0a:	39 88       	ldd	r3, Y+17	; 0x11
 b0c:	48 88       	ldd	r4, Y+16	; 0x10
 b0e:	5f 84       	ldd	r5, Y+15	; 0x0f
 b10:	6e 84       	ldd	r6, Y+14	; 0x0e
 b12:	7d 84       	ldd	r7, Y+13	; 0x0d
 b14:	8c 84       	ldd	r8, Y+12	; 0x0c
 b16:	9b 84       	ldd	r9, Y+11	; 0x0b
 b18:	aa 84       	ldd	r10, Y+10	; 0x0a
 b1a:	b9 84       	ldd	r11, Y+9	; 0x09
 b1c:	c8 84       	ldd	r12, Y+8	; 0x08
 b1e:	df 80       	ldd	r13, Y+7	; 0x07
 b20:	ee 80       	ldd	r14, Y+6	; 0x06
 b22:	fd 80       	ldd	r15, Y+5	; 0x05
 b24:	0c 81       	ldd	r16, Y+4	; 0x04
 b26:	1b 81       	ldd	r17, Y+3	; 0x03
 b28:	aa 81       	ldd	r26, Y+2	; 0x02
 b2a:	b9 81       	ldd	r27, Y+1	; 0x01
 b2c:	ce 0f       	add	r28, r30
 b2e:	d1 1d       	adc	r29, r1
 b30:	0f b6       	in	r0, 0x3f	; 63
 b32:	f8 94       	cli
 b34:	de bf       	out	0x3e, r29	; 62
 b36:	0f be       	out	0x3f, r0	; 63
 b38:	cd bf       	out	0x3d, r28	; 61
 b3a:	ed 01       	movw	r28, r26
 b3c:	08 95       	ret

00000b3e <_exit>:
 b3e:	f8 94       	cli

00000b40 <__stop_program>:
 b40:	ff cf       	rjmp	.-2      	; 0xb40 <__stop_program>
